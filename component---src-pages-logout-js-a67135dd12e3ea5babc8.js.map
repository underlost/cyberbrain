{"version":3,"sources":["webpack:///./src/pages/logout.js","webpack:///./src/components/Nav.js","webpack:///./src/components/LoginWrapper.js"],"names":["LogoutPage","guid","getCurrentUser","title","className","method","onSubmit","event","preventDefault","localStorage","removeItem","navigate","handleSubmit","Nav","role","to","LogginWrapper","children","useState","menuState","setMenuState","isLoggedIn","id","data-target","onClick","state","window"],"mappings":"8FAAA,4FA2CeA,UAnCI,WACjB,IAAMC,EAAOC,cAAiBD,KAS9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,WACX,wBAAIC,UAAU,kBAAd,UACA,uBAAGA,UAAU,QAAb,yGAEA,wBAAIA,UAAU,uBAAd,SACA,yBAAKA,UAAU,yBACb,4BAAKH,IAEP,0BACEG,UAAS,OACTC,OAAO,OACPC,SAAU,SAACC,IArBE,SAACA,GACpBA,EAAMC,iBACNC,aAAaC,WAAb,kBACAD,aAAaC,WAAb,SACAC,mBAAS,UAkBDC,CAAaL,KAGf,4BAAQH,UAAU,6BAAlB,e,mFCNKS,EA3BH,kBACV,yBAAKT,UAAS,aACZ,yBAAKA,UAAS,wBAA2BU,KAAK,cAC5C,wBAAIV,UAAU,iBACZ,wBAAIA,UAAU,aACZ,kBAAC,OAAD,CAAMW,GAAG,KAAT,SAEF,wBAAIX,UAAU,aACZ,kBAAC,OAAD,CAAMW,GAAG,WAAT,UAEF,wBAAIX,UAAU,aACZ,kBAAC,OAAD,CAAMW,GAAG,cAAT,aAEF,wBAAIX,UAAU,aACZ,kBAAC,OAAD,CAAMW,GAAG,YAAT,WAEF,wBAAIX,UAAU,aACZ,kBAAC,OAAD,CAAMW,GAAG,YAAT,WAEF,wBAAIX,UAAU,aACZ,kBAAC,OAAD,CAAMW,GAAG,WAAT,mBCiBKC,IAlCO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACJC,mBAAS,iBAApCC,EAD+B,KACpBC,EADoB,KAMtC,OAAIC,cAEA,yBAAKC,GAAG,OAAOlB,UAAS,YAAce,GACpC,yBAAKf,UAAU,kBACb,4BAAQA,UAAS,wBAA2BmB,cAAY,YAAYC,QAAS,WAPnFJ,GAAa,SAAAK,GAAK,MAAU,kBAALA,EAAA,qCAQf,0BAAMrB,UAAS,qBACf,0BAAMA,UAAS,wBACf,0BAAMA,UAAS,wBACf,0BAAMA,UAAS,wBACf,0BAAMA,UAAS,WAAf,uBAGJ,kBAAC,EAAD,MACA,yBAAKA,UAAU,YAAYa,KAI3B,oBAAOS,QACTf,mBAAS,UAEJ","file":"component---src-pages-logout-js-a67135dd12e3ea5babc8.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport LoginWrapper from '../components/LoginWrapper'\nimport { getCurrentUser } from '../util/storage'\nimport { navigate } from 'gatsby'\n\nconst LogoutPage = () => {\n  const guid = getCurrentUser().guid\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    localStorage.removeItem(`cyberbrainUser`)\n    localStorage.removeItem(`token`)\n    navigate(`/login`)\n  }\n\n  return (\n    <LoginWrapper>\n      <Layout>\n        <SEO title=\"Logout\" />\n        <h6 className=\"text-uppercase\">Logout</h6>\n        <p className=\"mb-5\">Before logging out, you should save your token if you would like to retieve your data again later on.</p>\n\n        <h6 className=\"text-uppercase mb-0\">Token</h6>\n        <pre className=\"highlight text-center\">\n          <h5>{guid}</h5>\n        </pre>\n        <form\n          className={`form`}\n          method=\"post\"\n          onSubmit={(event) => {\n            handleSubmit(event)\n            //navigate(`/`)\n          }}>\n          <button className=\"btn btn-block btn-primary\">Logout</button>\n        </form>\n      </Layout>\n    </LoginWrapper>\n  )\n}\n\nexport default LogoutPage\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Nav = () => (\n  <div className={`site-menu`}>\n    <nav className={`site-nav px-4 px-md-5`} role=\"navigation\">\n      <ul className=\"list-unstyled\">\n        <li className=\"menu-item\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className=\"menu-item\">\n          <Link to=\"/about/\">About</Link>\n        </li>\n        <li className=\"menu-item\">\n          <Link to=\"/settings/\">Settings</Link>\n        </li>\n        <li className=\"menu-item\">\n          <Link to=\"/logout/\">Logout</Link>\n        </li>\n        <li className=\"menu-item\">\n          <Link to=\"/fields/\">Fields</Link>\n        </li>\n        <li className=\"menu-item\">\n          <Link to=\"/debug/\">Debug Menu</Link>\n        </li>\n      </ul>\n    </nav>\n  </div>\n)\n\nexport default Nav\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { isLoggedIn } from '../util/storage'\nimport { navigate } from 'gatsby'\nimport Nav from './Nav'\n\nconst LogginWrapper = ({ children }) => {\n  const [menuState, setMenuState] = useState(`nav-is-closed`)\n  const toggleMenu = () => {\n    setMenuState(state => (state === `nav-is-closed` ? `nav-is-active` : `nav-is-closed`))\n  }\n\n  if (isLoggedIn()) {\n    return (\n      <div id=\"page\" className={`viewport ${menuState}`}>\n        <div className=\"toggle-wrapper\">\n          <button className={`button navbar-toggler`} data-target=\"page-wrap\" onClick={() => toggleMenu()}>\n            <span className={`icon-bar top-bar`} />\n            <span className={`icon-bar middle-bar`} />\n            <span className={`icon-bar middle-bar`} />\n            <span className={`icon-bar bottom-bar`} />\n            <span className={`sr-only`}>Toggle navigation</span>\n          </button>\n        </div>\n        <Nav />\n        <div className=\"loggedIn\">{children}</div>\n      </div>\n    )\n  } else {\n    if (typeof window !== `undefined`) {\n      navigate(`/login`)\n    }\n    return null\n  }\n}\n\nLogginWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default LogginWrapper\n"],"sourceRoot":""}